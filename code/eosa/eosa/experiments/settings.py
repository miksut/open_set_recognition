from pathlib import Path


"""
############################################################
 General Settings
############################################################

README: These settings should be checked before running the
algorithms.

The constants "APPROACHES" and "MODELS" must not be changed.

The various path settings can be customised if needed.
However, note that the default path settings work fine within
the project structure and therefore an adjustment is not 
recommended.

The constants KU_TARGET_DEFAULT as well as UU_TARGET_DEFAULT
are set according to the logic of the original protocols.
These values must not be changed when working with these
protocols via the package "imageNet_protocols".

"""
# approaches evaluated in this thesis
APPROACHES = {'base': 'Baseline', 'entropic': 'EntropicOSL',
              'evm': 'EVM', 'openmax': 'OpenMax', 'proser': 'Proser'}
# available networks that can be trained
MODELS = ['ResNet18', 'ResNet34', 'ResNet50', 'ResNet101', 'ResNet152']

# filesystem path to directory where trained models are stored in
MODEL_OUT_PATH_DEFAULT = Path(
    __file__).parent.parent.parent.parent.parent.resolve() / 'results' / 'models'
# filesystem path to directory where OSCR metrics and plots are stored in
OSCR_PATH_DEFAULT = Path(
    __file__).parent.parent.parent.parent.parent.resolve() / 'results' / 'oscr'
# filesystem path to directory where log data is stored in
LOG_PATH_DEFAULT = Path(
    __file__).parent.parent.parent.parent.parent.resolve() / 'results' / 'logs'
# filesystem path to root directory of the ILSVRC2012 dataset
DATA_PATH_DEFAULT = '/local/scratch/datasets/ImageNet/ILSVRC2012/'
# filesystem path to directory where csv-files (generated by script 'prepare_protocols.py') are stored in
CSV_PATH_DEFAULT = Path(
    __file__).parent.parent.parent.parent.parent.resolve() / 'data' / 'csv'

# target for known unknown classes as generated by protocols
# note: some approaches (e.g. entropic) assume targets of ku to be -1 in order to behave as intended
KU_TARGET_DEFAULT = -1
# target for unknown unknown classes as generated by protocols
UU_TARGET_DEFAULT = -2
# argument for torch DataLoader
NUM_WORKERS = 10


"""
############################################################
 Common Baseline & Entropic (Hyper)Parameter Specifications
############################################################
"""
# SUBCOMMANDS 'build_dnn train {base, entropic}': specification of the optimizer and its parameters
LEARNING_RATE = 0.001  # default Adam = 0.001
BETA_1 = 0.7   # 1st moment/momentum factor
BETA_2 = 0.999  # only for Adam (-> 2nd moment, default 0.999), ignored for SGD
OPTIMIZER_PARAMS = [LEARNING_RATE, BETA_1, BETA_2]
# SUBCOMMANDS 'build_dnn test {base, entropic}': filesystem path to model being used for testing procedure
MODEL_IN_BUILD_DNN_TEST = '/home/user/msuter/projects/master-suter/results/models/protocol_3/entropic/p3_traincls(kk+ku)_entropicosl_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pth'


"""
############################################################
 Common EVM & OpenMax (Hyper)Parameter Specifications
############################################################
"""
# SUBCOMMANDS 'use_dnn train {evm, openmax}' and 'use_dnn test {evm, openmax}': filesystem path to model being used for feature extraction
DNN_FEATURES = '/home/user/msuter/projects/master-suter/results/models/protocol_3/baseline/p3_traincls(kk)_baseline_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pth'
# SUBCOMMANDS 'use_dnn test {evm, openmax}': filesystem path to model being used for testing procedure
MODEL_IN_USE_DNN_TEST = '/home/user/msuter/projects/master-suter/results/models/protocol_3/openmax/p3_traincls(kk)_openmax_TS_1000.0_DM_2.00_cosine_dnn_p3_traincls(kk)_baseline_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pkl'
# SUBCOMMANDS 'use_dnn train {evm, openmax}: list of false positive rate (fpr) thresholds that are used to select the best model in the validation procedure in a "ccr@fpr" fashion (see Dhamija et al., 2018)
FPR_THRESHOLDS = [0.001, 0.01, 0.1, 0.15, 0.2]


"""
############################################################
 EVM Hyperparameter Specifications
############################################################
"""
# SUBCOMMANDS 'use_dnn train evm': collection of tailsizes used in training procedure
EVM_TAILSIZE = [10, 25, 50, 75, 100, 150, 200, 300, 500, 1000]
# SUBCOMMANDS 'use_dnn train evm': collection of cover thresholds used in training procedure
EVM_COVER_THRESHOLD = [1.0]
# SUBCOMMANDS 'use_dnn train evm': collection of distance multipliers used in training procedure
EVM_DIST_MULT = [0.1, 0.2, 0.3, 0.4, 0.5, 0.7, 0.9, 1.0]  # Protocol 2
# SUBCOMMANDS 'use_dnn train evm' and 'use_dnn test evm': distance metric used for computing pairwise distances, element of {cosine, euclidean}
EVM_DIST_METRIC = 'cosine'
# SUBCOMMANDS 'use_dnn train evm': number of classes per chunk (-> reduce when facing OOM errors)
EVM_CHUNK_SIZE = 200
# collated list containing all hyperparameters
EVM_HYPERPARAMS = [EVM_TAILSIZE, EVM_COVER_THRESHOLD,
                   EVM_DIST_MULT, EVM_DIST_METRIC, EVM_CHUNK_SIZE]


"""
############################################################
 OpenMax Hyperparameter Specifications
############################################################
"""
# list of tailsizes used in training procedure
OM_TAILSIZE = [10, 100, 250, 500, 750, 1000]
# list of distance multipliers used in training procedure
OM_DISTANCE_MULTIPLIER = [1.50, 1.7, 2.0, 2.3]
# list of translate amounts used in training procedure
OM_TRANSLATE_AMOUNT = [1.0]
# distance metric used for computing pairwise distances, element of {cosine, euclidean}
OM_DISTANCE_METRIC = 'cosine'
# list of alpha values to be evaluated in the openmax_alpha() method (see eosa/openset_algos/openmax_alpha.py)
# note that alpha refers to the number of "top" classes that are revised. For the training procedure, this list
# may contain multiple integer values. However, in the testing procedure only one integer value should be
# specified (concretely the value that is associated with the best validation performance w.r.t. ccr@fpr)
OM_ALPHA = [2, 3, 5, 10]
# list containing all hyperparameters
OPENMAX_HYPERPARAMS = [OM_TAILSIZE, OM_DISTANCE_MULTIPLIER,
                       OM_TRANSLATE_AMOUNT, OM_DISTANCE_METRIC, OM_ALPHA]


"""
############################################################
 PROSER Hyperparameter Specifications
############################################################
"""
# SUBCOMMANDS 'extend_dnn train proser': filesystem path to model being used as the pretrained closed set DNN that is extended by dummy clfs in training procedure
MODEL_EXTENDABLE = '/home/user/msuter/projects/master-suter/results/models/protocol_2/baseline/OPT_p2_traincls(kk)_baseline_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pth'
# SUBCOMMANDS 'extend_dnn test proser': filesystem path to model being used for testing procedure
MODEL_IN_EXTEND_DNN_TEST = '/home/user/msuter/projects/master-suter/results/models/protocol_3/proser/OPT_p3_traincls(kk)_proser_dummy20_epochsfine10_λ(1.0+1.0)_α1.0_bias(True)_basis_p3_traincls(kk)_baseline_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pkl'
# SUBCOMMANDS 'extend_dnn train proser': trade-off between loss, see https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L68
# note: the current value is the original default value (-> see https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L253)
LAMBDA_1 = 1.0
# SUBCOMMANDS 'extend_dnn train proser': trade-off between loss, see https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L68
# note: the current value is the original default value (-> see https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L254)
LAMBDA_2 = 1.0
# SUBCOMMANDS 'extend_dnn train proser': alpha value for beta distribution, see https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L39
# note: the current value is the original default value (-> https://github.com/zhoudw-zdw/CVPR21-Proser/blob/f5b53b90509e6460a783a0baa72bda52364810fd/proser_unknown_detection.py#L255)
ALPHA = 1.0
# list containing all parameters
PROSER_HYPERPARAMS = [LAMBDA_1, LAMBDA_2, ALPHA]
